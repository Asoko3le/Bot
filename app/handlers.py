#region /
from aiogram import F, Router, types
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command, Filter
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
import sqlite3
from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton,   InlineKeyboardMarkup)


import app.keyboards as kb



# —Ä–æ—É—Ç–µ—Ä, –¥–ª—è –∑–∞–º–µ–Ω—ã dp
router = Router()


conn = sqlite3.connect('users.db')
cursor = conn.cursor()
#endregion


# region KOMANDI
def tabl(user_id):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute('INSERT OR REPLACE INTO professions_test(user_id, nap, Inz, It, Mark, Him, Econ, Bot, "All", Psihoter, Ecol, Psiholog, Prep, Zhur, Adv, Buh, Fin) VALUES (?, NULL , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)',(user_id,))
    conn.commit()
    conn.close()

def test(user_id):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute('SELECT user_id, Inz, It, Mark, Him, Econ, Bot, "All", Psihoter, Ecol, Psiholog, Prep, Zhur, Adv, Buh, Fin FROM professions_test WHERE user_id = ?' ,(user_id,))
    rows = cursor.fetchall()
    for row in rows:
        user_id = row[0]
        professions = {
            'F1': row[1],
            'F2': row[2],
            'G1': row[3],
            'H1': row[4],
            'F3': row[5],
            'H5': row[6],
            'H4': row[7],
            'H3': row[8],
            'H2': row[9],
            'G5': row[10],
            'G4': row[11],
            'G3': row[12],
            'G2': row[13],
            'F5': row[14],
            'F4': row[15]
    }
    sorted_professions = sorted(professions.items(), key=lambda x: x[1], reverse=True)
    
    mxpr = sorted_professions[0][0]
    mxpr2 = sorted_professions[1][0]
    conn.close()
    return mxpr, mxpr2

def first(user_id):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor
    cursor.execute("INSERT OR IGNORE INTO users (user_id, napravlenie) VALUES (? , ?)", (user_id, 'nety'))
    cursor.execute('INSERT OR IGNORE INTO professions_test (user_id) VALUES (?)',(user_id,))
    conn.commit()
    conn.close()

def nap(user_id):
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()

    cursor.execute("SELECT napravlenie FROM users WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()

    conn.close()

    if result is None or result[0] == "nety":
        return 0
    elif result[0] == "F1":
        return 11
    elif result[0] == 'F2':
        return 12
    elif result[0] =='F3':
        return 13
    elif result[0] == 'G1':
        return 21
    elif result[0] == 'G2':
        return 22
    elif result[0] == 'G3':
        return 23
    elif result[0] == 'H1':
        return 31
    elif result[0] == 'H2':
        return 32
    elif result[0] == 'H3':
        return 32
    else:
        return 999
    
def napslovo(user_id):
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?', (user_id,))
    res = cursor.fetchone() 
    if res:
        napravlenie_code = res[0]  
        cursor.execute('SELECT name FROM directions WHERE code = ?', (napravlenie_code,))
        res1 = cursor.fetchone() 
        if res1:
            return res1[0]  
 
def test2(user_id):
    mxpr, mxpr2 = test(user_id)
    nap1 = mxpr
    nap2 = mxpr2
    cursor.execute('SELECT name FROM directions WHERE code = ?', (nap1,))
    re11 = cursor.fetchone()
    re1 = re11[0]
    cursor.execute('SELECT name FROM directions WHERE code = ?', (nap2,))
    re22 = cursor.fetchone()
    re2 = re22[0]
    return re1,re2

#endregion





#MAIN MENU 

@router.message(CommandStart())
async def cmd_start(message: Message):
    user_id = message.from_user.id
    if nap(user_id) == 0:
        await message.answer("–ü—Ä–∏–≤–µ—Ç\n\n–ë–æ—Ç –¥–ª—è –ø–æ–º–æ—â–∏ –≤ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏, –Ω–∞–π–¥–∏: \n–ù–∞ –∫–æ–≥–æ –ø–æ—Å—Ç—É–ø–∞—Ç—å?\n–ö—É–¥–∞ –ø–æ—Å—Ç—É–ø–∞—Ç—å?\n–ì–¥–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è?\n\n–¢—É—Ç –ø–æ—Å—Ç–∞—Ä–∞–ª–∏—Å—å —Å–æ–±—Ä–∞—Ç—å —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µüî•", reply_markup=kb.mainmenu1)
        first(user_id)
        tabl(user_id)
    else:
        res1 = napslovo(user_id)
        await message.answer(f"–í–∞—à–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:\n{res1}\n\n–ù–∞–π–¥–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫—É—Ä—Å—ã –≤ –ø–æ—Ä—Ç–∞–ª–µ –∏ —Ä–µ—à–∏ –∫—É–¥–∞ –ø–æ—Å—Ç—É–ø–∞—Ç—å!", reply_markup=kb.mainmenuwith)
    
@router.callback_query(F.data=='main')
async def tsh(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    if nap(user_id) == 0:
        await callback.message.edit_text("–ü—Ä–∏–≤–µ—Ç\n\n–ë–æ—Ç –¥–ª—è –ø–æ–º–æ—â–∏ –≤ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏, –Ω–∞–π–¥–∏: \n–ù–∞ –∫–æ–≥–æ –ø–æ—Å—Ç—É–ø–∞—Ç—å?\n–ö—É–¥–∞ –ø–æ—Å—Ç—É–ø–∞—Ç—å?\n–ì–¥–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è?\n\n–¢—É—Ç –ø–æ—Å—Ç–∞—Ä–∞–ª–∏—Å—å —Å–æ–±—Ä–∞—Ç—å —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µüî•", reply_markup=kb.mainmenu1)
        first(user_id)
    else:
        res1 = napslovo(user_id)
        await callback.message.edit_text(f"–í–∞—à–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:\n{res1}\n\n–ù–∞–π–¥–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫—É—Ä—Å—ã –≤ –ø–æ—Ä—Ç–∞–ª–µ –∏ —Ä–µ—à–∏ –∫—É–¥–∞ –ø–æ—Å—Ç—É–ø–∞—Ç—å!", reply_markup=kb.mainmenuwith)





@router.callback_query(F.data=='Dop')
async def tsh(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text('‚ñº–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ‚ñº',reply_markup=kb.Dop)





@router.callback_query(F.data=='Vyzi2')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â–∏—Ö –≤—É–∑–æ–≤',reply_markup=kb.Vyzi2)


@router.callback_query(F.data=='Fm2')
async def tsh(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â–∏—Ö –≤—É–∑–æ–≤',reply_markup=kb.FizMat2)

@router.callback_query(F.data=='Gm2')
async def tsh(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â–∏—Ö –≤—É–∑–æ–≤',reply_markup=kb.Gym2)

@router.callback_query(F.data=='Hm2')
async def tsh(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â–∏—Ö –≤—É–∑–æ–≤',reply_markup=kb.HimBio2)


# region PODROBNEE
@router.callback_query(F.data=='Podrobnee')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    nap1 = cursor.fetchone()
    nap=nap1[0]
    cursor.execute(f'SELECT Descript FROM directions WHERE code = ?',(nap,))
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = ?',(nap,))
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)


# endregion

















# region Vyz

@router.callback_query(F.data.in_(['PopInz1','Popinz1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"Inz",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    buttons = []
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text('–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –∏–Ω–∂–µ–Ω–µ—Ä–∞',reply_markup=keyboard)

@router.callback_query(F.data.in_(['PopIt1','Popit1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"It",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "It" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    buttons = []
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é It-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞',reply_markup=keyboard)

@router.callback_query(F.data.in_(['PopEcon1','Popecon1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"Econ",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    print(trr)
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Econ" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    buttons = []
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –≠–∫–æ–Ω–æ–º–∏—Å—Ç–∞',reply_markup=keyboard)

@router.callback_query(F.data.in_(['PopFin1','Popfin1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"Fin",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Fin" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    
    buttons = []
    
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –§–∏–Ω–∞–Ω—Å–∏—Å—Ç–∞',reply_markup=keyboard)

@router.callback_query(F.data.in_(['PopBuh1','Popbuh1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"Buh",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Buh" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    
    buttons = []
    
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
   
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –ë—É—Ö–≥–∞–ª—Ç–µ—Ä',reply_markup=keyboard)


@router.callback_query(F.data.in_(['Pophim1','PopHim1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"Him",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Him" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
   
    buttons = []
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
  
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –•–∏–º–∏–∫–∞',reply_markup=keyboard)

@router.callback_query(F.data.in_(['PopEcol1','Popecol1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"Ecol",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Ecol" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    buttons = []
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –≠–∫–æ–ª–æ–≥–∞',reply_markup=keyboard)

@router.callback_query(F.data.in_(['Poppsihoter1','PopPsihoter1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"Psihoter",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Psihoter" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    buttons = []
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
   
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∞',reply_markup=keyboard)

@router.callback_query(F.data.in_(['Popall1','PopAll1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"All",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "All" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    buttons = []
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –ê–ª–ª–µ—Ä–≥–æ–ª–æ–≥–∞',reply_markup=keyboard)

@router.callback_query(F.data.in_(['PopBot1','Popbot1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"Bot",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Bot" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    buttons = []
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –ë–æ—Ç–∞–Ω–∏–∫–∞',reply_markup=keyboard)

@router.callback_query(F.data.in_(['PopMark1','Popmark1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"Mark",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Mark" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    buttons = []
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
   
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∞',reply_markup=keyboard)

@router.callback_query(F.data.in_(['PopAdv1','Popadv1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"Adv",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Adv" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    buttons = []
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
   
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –ê–¥–≤–æ–∫–∞—Ç–∞',reply_markup=keyboard)

@router.callback_query(F.data.in_(['PopZhur1','Popzhur1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"Zhur",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Zhur" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    
    buttons = []
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –ñ—É—Ä–Ω–∞–ª–∏—Å—Ç–∞',reply_markup=keyboard)


@router.callback_query(F.data.in_(['Popprep1', 'PopPrep1']))
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT napravlenie FROM users WHERE user_id = ?',(user_id,))
    tr = cursor.fetchone()
    cursor.execute('INSERT OR REPLACE INTO users(user_id, napravlenie, vyzn) VALUES (?, ?, ?)',(user_id, tr[0],"Prep",))
    conn.commit()
    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    trr = cursor.fetchone()
    
    cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Prep" AND (gorodind = ? OR gorodind = ? OR gorodind = ?)', 
               (trr[0], trr[1], trr[2]))
    res = cursor.fetchall()
    unres = []
    if res == unres:
        cursor.execute('SELECT sokrash, vyz_sokr FROM vyz WHERE napravlenie = "Inz"')
        res = cursor.fetchall()
    
    buttons = []
    
    for gg in res:
        buttons.append([InlineKeyboardButton(text=gg[0], callback_data=gg[1])])
    buttons.append([InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞‚öôÔ∏è', callback_data='opt')])
    buttons.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await callback.answer('')
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –ü—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—å',reply_markup=keyboard)

# endregion









# region - 


@router.callback_query(F.data=='opt')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id

    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    opt2 = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ü–æ–∏—Å–∫ –ø–æ –≥–æ—Ä–æ–¥—Éüè¢', callback_data= 'optcity')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')],
])
    await callback.answer('')
    await callback.message.edit_text('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞:',reply_markup=opt2)




@router.callback_query(F.data == 'optcity')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    

    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
   
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    









    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)





@router.callback_query(F.data == 'opmsk')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'msk'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)




@router.callback_query(F.data == 'opspb')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'spb'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)

@router.callback_query(F.data == 'opkzn')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'kzn'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)

@router.callback_query(F.data == 'opnvs')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'nvs'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)

@router.callback_query(F.data == 'opnnv')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'nnv'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)

@router.callback_query(F.data == 'opekb')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'ekb'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)


@router.callback_query(F.data == 'opbar')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'bar'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)




@router.callback_query(F.data == 'opros')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'ros'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)

@router.callback_query(F.data == 'optom')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'tom'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)




@router.callback_query(F.data == 'opyfa')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'yfa'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)


@router.callback_query(F.data == 'opkyr')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'kyr'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)

@router.callback_query(F.data == 'opvol')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'vol'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)


@router.callback_query(F.data == 'opsev')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    heh = 'sev'
    cursor.execute('SELECT vyzn FROM users WHERE user_id = ?',(user_id,))
    sik = cursor.fetchone()
    
    cursor.execute(f'SELECT DISTINCT gorod, gorodind FROM vyz WHERE napravlenie = "{sik[0]}"')
    res = cursor.fetchall()
    

    cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
    tot = cursor.fetchone()
    if tot[0] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[1] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    elif tot[2] == f'{heh}':
        cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    else:
        if tot[0] is None:
            cursor.execute(f'UPDATE vyzf SET gorin1 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[1] is None:
            cursor.execute(f'UPDATE vyzf SET gorin2 = "{heh}" WHERE user_id = ?', (user_id,))
        elif tot[2] is None:
            cursor.execute(f'UPDATE vyzf SET gorin3 = "{heh}" WHERE user_id = ?', (user_id,))


    conn.commit()
    buttons1 = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ res
    for gg in res:
        cursor.execute('SELECT gorin1, gorin2, gorin3 FROM vyzf WHERE user_id = ?',(user_id,))
        tot = cursor.fetchone()
        if tot[0] == gg[1] or tot[1] == gg[1] or tot[2] == gg[1]:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}‚úÖ', callback_data=f'op{gg[1]}')])
        else:
            buttons1.append([InlineKeyboardButton(text=f'{gg[0]}', callback_data=f'op{gg[1]}')])
    buttons1.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'Pop{sik[0]}1')])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons1)
    await callback.answer('')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞',reply_markup=keyboard)



# endregion



















# region   Psihol
@router.callback_query(F.data=='mgypsih')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "mgypsih"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Poppsihol1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'mgypsih'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='vhepsih')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "vhepsih"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Poppsihol1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'vhepsih'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='sevpsih')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "sevpsih"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Poppsihol1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'sevpsih'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='vladpsih')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "vladpsih"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Poppsihol1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'vladpsih'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='mospsih')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "mospsih"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Poppsihol1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'mospsih'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region   Prep
@router.callback_query(F.data=='Mosprep')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "Mosprep"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popprep1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'Mosprep'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='rosprep')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "rosprep"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popprep1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'rosprep'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='belprep')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "belprep"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popprep1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'belprep'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='sibprep')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "sibprep"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popprep1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'sibprep'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='sevkavprep')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "sevkavprep"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popprep1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'sevkavprep'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region   Zhur
@router.callback_query(F.data=='zhu1')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "zhu1"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popzhur1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'zhu1'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='zhu2')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "zhu2"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popzhur1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'zhu2'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='zhu3')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "zhu3"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popzhur1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'zhu3'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='zhu4')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "zhu4"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popzhur1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'zhu4'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='zhu5')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "zhu5"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popzhur1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'zhu5'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region   Adv
@router.callback_query(F.data=='SpbAdv5')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SpbAdv5"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popadv1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SpbAdv5'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SpbAdv4')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SpbAdv4"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popadv1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SpbAdv4'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SpbAdv3')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SpbAdv3"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popadv1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SpbAdv3'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SpbAdv2')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SpbAdv2"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popadv1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SpbAdv2'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SpbAdv1')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SpbAdv1"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popadv1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SpbAdv1'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region   Mark
@router.callback_query(F.data=='InzhMark')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "InzhMark"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popmark1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'InzhMark'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='MarkRus')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "MarkRus"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popmark1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'MarkRus'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='MarkSBGY')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "MarkSBGY"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popmark1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'MarkSBGY'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SPBGYMARK')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SPBGYMARK"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popmark1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SPBGYMARK'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='MARKSPB')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "MARKSPB"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popmark1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'MARKSPB'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region   Botanik
@router.callback_query(F.data=='Mosc1Botan')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "Mosc1Botan"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popbot1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'Mosc1Botan'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='Mosc2Botan')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "Mosc2Botan"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popbot1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'Mosc2Botan'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='KazanBot')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "KazanBot"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popbot1')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='TomskBot')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "TomskBot"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popbot1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'TomskBot'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='Kyrgan1')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "Kyrgan1"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popbot1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'Kyrgan1'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region   All
@router.callback_query(F.data=='SpbAll')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SpbAll"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popall1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SpbAll'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SpbAll2')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SpbAll2"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popall1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SpbAll2'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)


# endregion

# region   psihoter
@router.callback_query(F.data=='Spb1Psih')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "Spb1Psih"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Poppsihoter1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'Spb1Psih'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='Spb2Psih')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "Spb2Psih"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Poppsihoter1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'Spb2Psih'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='Spb3Psih')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "Spb3Psih"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Poppsihoter1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'Spb3Psih'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='Spb4Psih')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "Spb4Psih"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Poppsihoter1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'Spb4Psih'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='Spb5Psih')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "Spb5Psih"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Poppsihoter1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'Spb5Psih'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region   Ecol
@router.callback_query(F.data=='YralEcol')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "YralEcol"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popecol1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'YralEcol'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='MosEcol')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "MosEcol"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popecol1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'MosEcol'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='DryzhbEcol')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "DryzhbEcol"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popecol1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'DryzhbEcol'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='YfaEcol')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "YfaEcol"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popecol1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'YfaEcol'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SpbEcol')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SpbEcol"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popecol1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SpbEcol'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region   Him
@router.callback_query(F.data=='RosDruzh')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "RosDruzh"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Pophim1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'RosDruzh'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SPBGYHim')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SPBGYHim"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Pophim1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SPBGYHim'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='tomskYn')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "tomskYn"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Pophim1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'tomskYn'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='YralYn')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "YralYn"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Pophim1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'YralYn'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='UFYROST')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "UFYROST"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Pophim1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'UFYROST'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region   Buh
@router.callback_query(F.data=='MosBuh')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "MosBuh"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popbuh1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'MosBuh'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SpbBuh')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SpbBuh"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popbuh1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SpbBuh'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SPBBUHG')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SPBBUHG"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popbuh1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SPBBUHG'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='NacBuhNN')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "NacBuhNN"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popbuh1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'NacBuhNN'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='VolgBuh')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "VolgBuh"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popbuh1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'VolgBuh'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region   Fin
@router.callback_query(F.data=='MTI')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "MTI"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popfin1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'MTI'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SPbFin')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SPbFin"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popfin1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SPbFin'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='RANGHIS')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "RANGHIS"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popfin1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'RANGHIS'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SEVFIN')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SEVFIN"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popfin1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SEVFIN'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='YralFin')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "YralFin"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popfin1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'YralFin'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region   Econ
@router.callback_query(F.data=='NIYVHE')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "NIYVHE"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popecon1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'NIYVHE'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SPSPB')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SPSPB"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popecon1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SPSPB'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='MGY')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "MGY"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popecon1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'MGY'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='NGY')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "NGY"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popecon1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'NGY'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='ALTAY')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "ALTAY"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popecon1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'ALTAY'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region   IT
@router.callback_query(F.data=='MGTYBay')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "MGTYBay"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popit1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'MGTYBay'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='ITMO')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "ITMO"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popit1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'ITMO'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SPBGY')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SPBGY"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popit1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SPBGY'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='YrFedElc')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "YrFedElc"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popit1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'YrFedElc'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='KazFed')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "KazFed"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popit1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'KazFed'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion

# region InzhVyz


@router.callback_query(F.data=='YrFedYnElc')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "YrFedYnElc"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popinz1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'YrFedYnElc'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SevGosYn')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SevGosYn"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popinz1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SevGosYn'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='MosStankin')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "MosStankin"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popinz1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'MosStankin'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

@router.callback_query(F.data=='SaintPGY')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SaintPGY"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popinz1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SaintPGY'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)


@router.callback_query(F.data=='SaintPPYPV')
async def tsh(callback: CallbackQuery):
    cursor.execute('SELECT gorod, site, prbb, prbp, Polnoe FROM vyz WHERE vyz_sokr = "SaintPPYPV"')
    pir = cursor.fetchall()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–∞–π—Ç —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—èüåê', url=f'{pir[0][1]}')],
    [InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ "–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª"?', callback_data='prohodnoy')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='Popinz1')]
])
    user_id = callback.from_user.id
    cursor.execute('INSERT OR REPLACE INTO lastcon(user_id, lastdata) VALUES (?, ?)',(user_id,'SaintPPYPV'))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text(f'{pir[0][4]}\n–ì–æ—Ä–æ–¥ - {pir[0][0]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –±—é–¥–∂–µ—Ç - {pir[0][2]}\n–ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª –ø–ª–∞—Ç–Ω–æ–µ - {pir[0][3]}',reply_markup=YrFedYnElc)

# endregion


@router.callback_query(F.data=='prohodnoy')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('SELECT lastdata FROM lastcon WHERE user_id = ?',(user_id,))
    pir = cursor.fetchone()
    YrFedYnElc = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data=f'{pir[0]}')]
])
    user_id = callback.from_user.id
 
    await callback.answer('')
    await callback.message.edit_text('–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –ï–ì–≠ –≤ –≤—É–∑–µ\n\n\n–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –ï–ì–≠ –≤ –≤—É–∑–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –¥–ª—è –≤—Å–µ–≥–æ –≤—É–∑–∞ –∏ —è–≤–ª—è–µ—Ç—Å—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π, –∫–æ—Ç–æ—Ä—É—é –æ–Ω —Å–æ–æ–±—â–∞–µ—Ç –≤ –ú–∏–Ω–æ–±—Ä–Ω–∞—É–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–∏–µ–º–∞.\n\n–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –ï–ì–≠ –≤—É–∑–∞ ‚Äî —ç—Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –æ–¥–Ω–æ–≥–æ –ï–ì–≠ –∫—Ä–∞–π–Ω–µ–≥–æ –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞, –ø–æ—Å—Ç—É–ø–∏–≤—à–µ–≥–æ –≤ –≤—É–∑. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –æ–Ω —Ç–∞–∫: —Å—É–º–º–∞ –±–∞–ª–ª–æ–≤ –ï–ì–≠ –ø–æ —ç–∫–∑–∞–º–µ–Ω–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∫–æ–Ω–∫—É—Ä—Å–µ –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤—É–∑–∞, –¥–µ–ª–µ–Ω–Ω–∞—è –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–∞–º–µ–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–µ–Ω —Å–¥–∞—Ç—å –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç.',reply_markup=YrFedYnElc)


































































# region OBZOR 2

@router.callback_query(F.data=='Obzor2')
async def tsh(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text('–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π',reply_markup=kb.Obzor2)


@router.callback_query(F.data=='Fm1')
async def tsh(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text('–ü–æ–¥–±–æ—Ä–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å —Ñ–∏–∑–∏–∫–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —É–∫–ª–æ–Ω–æ–º',reply_markup=kb.FizMat1)

@router.callback_query(F.data=='Hm1')
async def tsh(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text('–ü–æ–¥–±–æ—Ä–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å —Ö–∏–º-–±–∏–æ —É–∫–ª–æ–Ω–æ–º',reply_markup=kb.HimBio1)

@router.callback_query(F.data=='Gm1')
async def tsh(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text('–ü–æ–¥–±–æ—Ä–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–º —É–∫–ª–æ–Ω–æ–º',reply_markup=kb.Gym1)

# endregion


# region PODROBNEE

@router.callback_query(F.data=='Popinz')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "F1"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "F1"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)


@router.callback_query(F.data=='Popit')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "F2"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "F2"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)


@router.callback_query(F.data=='Popecon')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "F3"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "F3"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)

@router.callback_query(F.data=='Popfin')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "F4"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "F4"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)

@router.callback_query(F.data=='Popbuh')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "F5"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "F5"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)



@router.callback_query(F.data=='Popmark')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "G1"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "G1"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)

@router.callback_query(F.data=='Popadv')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "G2"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "G2"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)

@router.callback_query(F.data=='Popzhur')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "G3"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "G3"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)

@router.callback_query(F.data=='Popprep')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "G4"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "G4"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)

@router.callback_query(F.data=='Popsihol')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "G5"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "G5"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)




@router.callback_query(F.data=='Pophim')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "H1"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "H1"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)

@router.callback_query(F.data=='Popecol')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "H2"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "H2"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)

@router.callback_query(F.data=='Poppsihoter')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "H3"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "H3"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)

@router.callback_query(F.data=='Popall')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "H4"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "H4"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)

@router.callback_query(F.data=='Popbot')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute(f'SELECT Descript FROM directions WHERE code = "H2"')
    napr1 = cursor.fetchone()
    napr=napr1[0]
    cursor.execute(f'SELECT Vyzteg FROM directions WHERE code = "H2"')
    aba1 = cursor.fetchone()
    aba=aba1[0]
    cursor.execute('UPDATE vyzf SET gorin1 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin2 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('UPDATE vyzf SET gorin3 = NULL WHERE user_id = ?',(user_id,) )
    cursor.execute('INSERT OR IGNORE INTO vyzf(user_id) VALUES (?)',(user_id,))
    conn.commit()   
    podrob = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—É–∑—ã –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—éüè´', callback_data=f'{aba}')],
    [InlineKeyboardButton(text='–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ãüìö', url = 'https://dopobr.petersburgedu.ru')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥üìå', callback_data='main')]
])
    await callback.answer('')
    await callback.message.edit_text(f'{napr}\n',reply_markup=podrob)

# endregion


# region TEST

@router.callback_query(F.data=='znayu')
async def tsh(callback: CallbackQuery):
    await callback.answer('–í—ã–±–∏—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
    await callback.message.edit_text('–ü–æ–¥–±–æ—Ä–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π, –≤—ã–±–∏—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É',reply_markup=kb.Obzor1)




@router.callback_query(F.data=='STEST')
async def tsh(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text('–ú–∏–Ω–∏-—Ç–µ—Å—Ç –Ω–∞ 15 –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ –≤–∞–º —Å–∏–º–ø–æ—Ç–∏–∑–∏—Ä—É—é—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è!',reply_markup=kb.stest)






@router.callback_query(F.data=='starttest')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    tabl(user_id)
    await callback.answer('')
    await callback.message.edit_text('1 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ –≤—Å–µ–≥–æ?\na) –†–∞–±–æ—Ç–∞—Ç—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏ –∏ —Å–∏—Å—Ç–µ–º–∞–º–∏\nb) –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –ø—Ä–∏—Ä–æ–¥—É –∏ —Ä–∞—Å—Ç–µ–Ω–∏—è\nc) –ü–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å –ø—Å–∏—Ö–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏',reply_markup=kb.vop1)

#1


@router.callback_query(F.data=='1a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Inz = Inz + 1, It = It + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('2 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –≤–∞–º –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–æ–∫?\na) –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ü–∏—Ñ—Ä\nb) –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Å–æ—Å—Ç–∞–≤–æ–≤\nc) –ü–æ–º–æ—â—å –ª—é–¥—è–º –≤ –ø–æ–∏—Å–∫–µ –∏—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –º–∏—Ä–∞',reply_markup=kb.vop2)

@router.callback_query(F.data=='1b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Bot = Bot + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('2 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –≤–∞–º –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–æ–∫?\na) –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ü–∏—Ñ—Ä\nb) –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Å–æ—Å—Ç–∞–≤–æ–≤\nc) –ü–æ–º–æ—â—å –ª—é–¥—è–º –≤ –ø–æ–∏—Å–∫–µ –∏—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –º–∏—Ä–∞',reply_markup=kb.vop2)

@router.callback_query(F.data=='1c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Psihoter  = Psihoter + 1, Psiholog = Psiholog + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('2 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –≤–∞–º –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–æ–∫?\na) –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ü–∏—Ñ—Ä\nb) –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Å–æ—Å—Ç–∞–≤–æ–≤\nc) –ü–æ–º–æ—â—å –ª—é–¥—è–º –≤ –ø–æ–∏—Å–∫–µ –∏—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –º–∏—Ä–∞',reply_markup=kb.vop2)




@router.callback_query(F.data=='2a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Econ = Econ + 1, Fin = Fin + 1, Buh = Buh + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('3 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –±–ª–∏–∂–µ?\na) –ó–∞–Ω–∏–º–∞—Ç—å—Å—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ —ç–∫–æ–ª–æ–≥–∏–∏\nb) –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã\nc) –°–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–º–∏ –∫–∞–º–ø–∞–Ω–∏—è–º–∏',reply_markup=kb.vop3)

@router.callback_query(F.data=='2b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Him = Him + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('3 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –±–ª–∏–∂–µ?\na) –ó–∞–Ω–∏–º–∞—Ç—å—Å—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ —ç–∫–æ–ª–æ–≥–∏–∏\nb) –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã\nc) –°–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–º–∏ –∫–∞–º–ø–∞–Ω–∏—è–º–∏',reply_markup=kb.vop3)

@router.callback_query(F.data=='2c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Psihoter  = Psihoter + 1, Psiholog = Psiholog + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('3 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –±–ª–∏–∂–µ?\na) –ó–∞–Ω–∏–º–∞—Ç—å—Å—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ —ç–∫–æ–ª–æ–≥–∏–∏\nb) –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã\nc) –°–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–º–∏ –∫–∞–º–ø–∞–Ω–∏—è–º–∏',reply_markup=kb.vop3)



@router.callback_query(F.data=='3a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Ecol = Ecol + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('4 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é —Ä–∞–±–æ—Ç—É –≤—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ –±—ã?\na) –°–æ—Å—Ç–∞–≤–ª—è—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏\nb) –†–∞–±–æ—Ç–∞—Ç—å —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –∏–ª–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏\nc) –†–∞–±–æ—Ç–∞—Ç—å —Å —Ü–∏—Ñ—Ä–∞–º–∏ –∏ –≤–µ—Å—Ç–∏ —É—á–µ—Ç',reply_markup=kb.vop4)

@router.callback_query(F.data=='3b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Inz = Inz + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('4 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é —Ä–∞–±–æ—Ç—É –≤—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ –±—ã?\na) –°–æ—Å—Ç–∞–≤–ª—è—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏\nb) –†–∞–±–æ—Ç–∞—Ç—å —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –∏–ª–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏\nc) –†–∞–±–æ—Ç–∞—Ç—å —Å —Ü–∏—Ñ—Ä–∞–º–∏ –∏ –≤–µ—Å—Ç–∏ —É—á–µ—Ç',reply_markup=kb.vop4)

@router.callback_query(F.data=='3c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Mark = Mark + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('4 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é —Ä–∞–±–æ—Ç—É –≤—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ –±—ã?\na) –°–æ—Å—Ç–∞–≤–ª—è—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏\nb) –†–∞–±–æ—Ç–∞—Ç—å —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –∏–ª–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏\nc) –†–∞–±–æ—Ç–∞—Ç—å —Å —Ü–∏—Ñ—Ä–∞–º–∏ –∏ –≤–µ—Å—Ç–∏ —É—á–µ—Ç',reply_markup=kb.vop4)





@router.callback_query(F.data=='4a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Mark = Mark + 1, Fin = Fin + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('5 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ?\na) –†–∞–±–æ—Ç–∞—Ç—å –≤ —Å—Ñ–µ—Ä–µ –Ω–∞—É–∫–∏ –∏ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã\nb) –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ IT-–ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\nc) –ü–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º —Ä–µ—à–∞—Ç—å –∏—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã',reply_markup=kb.vop5)

@router.callback_query(F.data=='4b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET "All" = "All" + 1, Psiholog = Psiholog + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('5 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ?\na) –†–∞–±–æ—Ç–∞—Ç—å –≤ —Å—Ñ–µ—Ä–µ –Ω–∞—É–∫–∏ –∏ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã\nb) –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ IT-–ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\nc) –ü–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º —Ä–µ—à–∞—Ç—å –∏—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã',reply_markup=kb.vop5)

@router.callback_query(F.data=='4c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Buh = Buh + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('5 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ?\na) –†–∞–±–æ—Ç–∞—Ç—å –≤ —Å—Ñ–µ—Ä–µ –Ω–∞—É–∫–∏ –∏ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã\nb) –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ IT-–ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\nc) –ü–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º —Ä–µ—à–∞—Ç—å –∏—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã',reply_markup=kb.vop5)






@router.callback_query(F.data=='5a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Bot = Bot + 1, Him = Him + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('6 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫–æ–π —Ç–∏–ø –∑–∞–¥–∞—á –≤–∞–º –±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω?\na) –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ\nb) –ü—Ä–æ–≤–æ–¥–∏—Ç—å –Ω–∞—É—á–Ω—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã\nc) –†–∞–±–æ—Ç–∞—Ç—å —Å –ª—é–¥—å–º–∏ –≤ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ–π —Ä–æ–ª–∏',reply_markup=kb.vop6)

@router.callback_query(F.data=='5b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET It = It + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('6 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫–æ–π —Ç–∏–ø –∑–∞–¥–∞—á –≤–∞–º –±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω?\na) –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ\nb) –ü—Ä–æ–≤–æ–¥–∏—Ç—å –Ω–∞—É—á–Ω—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã\nc) –†–∞–±–æ—Ç–∞—Ç—å —Å –ª—é–¥—å–º–∏ –≤ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ–π —Ä–æ–ª–∏',reply_markup=kb.vop6)

@router.callback_query(F.data=='5c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Adv = Adv + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('6 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫–æ–π —Ç–∏–ø –∑–∞–¥–∞—á –≤–∞–º –±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω?\na) –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ\nb) –ü—Ä–æ–≤–æ–¥–∏—Ç—å –Ω–∞—É—á–Ω—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã\nc) –†–∞–±–æ—Ç–∞—Ç—å —Å –ª—é–¥—å–º–∏ –≤ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ–π —Ä–æ–ª–∏',reply_markup=kb.vop6)






@router.callback_query(F.data=='6a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Fin = Fin + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('7 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫ –≤—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É?\na) –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π\nb) –ü–æ–º–æ—â—å –≤ —Ä–µ—à–µ–Ω–∏–∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤\nc) –†–∞–±–æ—Ç–∞ —Å –ø—Ä–∏—Ä–æ–¥–æ–π –∏ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏',reply_markup=kb.vop7)

@router.callback_query(F.data=='6b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Him = Him + 1, Bot = Bot + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('7 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫ –≤—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É?\na) –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π\nb) –ü–æ–º–æ—â—å –≤ —Ä–µ—à–µ–Ω–∏–∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤\nc) –†–∞–±–æ—Ç–∞ —Å –ø—Ä–∏—Ä–æ–¥–æ–π –∏ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏',reply_markup=kb.vop7)

@router.callback_query(F.data=='6c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Psihoter  = Psihoter + 1, Psiholog = Psiholog + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('7 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫ –≤—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É?\na) –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π\nb) –ü–æ–º–æ—â—å –≤ —Ä–µ—à–µ–Ω–∏–∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤\nc) –†–∞–±–æ—Ç–∞ —Å –ø—Ä–∏—Ä–æ–¥–æ–π –∏ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏',reply_markup=kb.vop7)






@router.callback_query(F.data=='7a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Inz = Inz + 1, It = It + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('8 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é –∏–∑ —ç—Ç–∏—Ö –∑–∞–¥–∞—á –≤—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ –±—ã —Ä–µ—à–∞—Ç—å?\na) –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏\nb) –û–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –ª—é–¥—è–º —Å –ø—Å–∏—Ö–∏—á–µ—Å–∫–∏–º–∏ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏\nc) –†–∞–±–æ—Ç–∞—Ç—å —Å –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º –∏ –ø—Ä–∞–≤–∞–º–∏ –ª—é–¥–µ–π',reply_markup=kb.vop8)

@router.callback_query(F.data=='7b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Adv = Adv + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('8 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é –∏–∑ —ç—Ç–∏—Ö –∑–∞–¥–∞—á –≤—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ –±—ã —Ä–µ—à–∞—Ç—å?\na) –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏\nb) –û–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –ª—é–¥—è–º —Å –ø—Å–∏—Ö–∏—á–µ—Å–∫–∏–º–∏ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏\nc) –†–∞–±–æ—Ç–∞—Ç—å —Å –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º –∏ –ø—Ä–∞–≤–∞–º–∏ –ª—é–¥–µ–π',reply_markup=kb.vop8)

@router.callback_query(F.data=='7c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Bot = Bot + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('8 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é –∏–∑ —ç—Ç–∏—Ö –∑–∞–¥–∞—á –≤—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ –±—ã —Ä–µ—à–∞—Ç—å?\na) –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏\nb) –û–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –ª—é–¥—è–º —Å –ø—Å–∏—Ö–∏—á–µ—Å–∫–∏–º–∏ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏\nc) –†–∞–±–æ—Ç–∞—Ç—å —Å –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º –∏ –ø—Ä–∞–≤–∞–º–∏ –ª—é–¥–µ–π',reply_markup=kb.vop8)





@router.callback_query(F.data=='8a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Econ = Econ + 1, Fin = Fin + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('9 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é —Ä–æ–ª—å –≤ –∂–∏–∑–Ω–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–≥—Ä–∞—Ç—å?\na) –ù–∞—É—á–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è\nb) –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —ç–∫—Å–ø–µ—Ä—Ç–∞\nc) –ü—Ä–æ–¥–∞–≤—Ü–∞ –∏–ª–∏ –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∞',reply_markup=kb.vop9)

@router.callback_query(F.data=='8b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Psihoter  = Psihoter + 1, Psiholog = Psiholog + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('9 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é —Ä–æ–ª—å –≤ –∂–∏–∑–Ω–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–≥—Ä–∞—Ç—å?\na) –ù–∞—É—á–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è\nb) –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —ç–∫—Å–ø–µ—Ä—Ç–∞\nc) –ü—Ä–æ–¥–∞–≤—Ü–∞ –∏–ª–∏ –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∞',reply_markup=kb.vop9)

@router.callback_query(F.data=='8c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Adv = Adv + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('9 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é —Ä–æ–ª—å –≤ –∂–∏–∑–Ω–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–≥—Ä–∞—Ç—å?\na) –ù–∞—É—á–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è\nb) –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —ç–∫—Å–ø–µ—Ä—Ç–∞\nc) –ü—Ä–æ–¥–∞–≤—Ü–∞ –∏–ª–∏ –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∞',reply_markup=kb.vop9)







@router.callback_query(F.data=='9a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Him = Him + 1, Bot = Bot + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('10 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫ –≤—ã –≤–∏–¥–∏—Ç–µ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –≤ –±—É–¥—É—â–µ–º?\na) –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ —Å–∏—Å—Ç–µ–º—ã\nb) –†–∞–±–æ—Ç–∞—Ç—å –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞—Ö –∏–ª–∏ –±–∞–Ω–∫–∞—Ö\nc) –ü—Ä–æ–≤–æ–¥–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏',reply_markup=kb.vop10)

@router.callback_query(F.data=='9b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Inz = Inz + 1, It = It + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('10 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫ –≤—ã –≤–∏–¥–∏—Ç–µ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –≤ –±—É–¥—É—â–µ–º?\na) –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ —Å–∏—Å—Ç–µ–º—ã\nb) –†–∞–±–æ—Ç–∞—Ç—å –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞—Ö –∏–ª–∏ –±–∞–Ω–∫–∞—Ö\nc) –ü—Ä–æ–≤–æ–¥–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏',reply_markup=kb.vop10)

@router.callback_query(F.data=='9c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Mark = Mark + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('10 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫ –≤—ã –≤–∏–¥–∏—Ç–µ —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –≤ –±—É–¥—É—â–µ–º?\na) –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ —Å–∏—Å—Ç–µ–º—ã\nb) –†–∞–±–æ—Ç–∞—Ç—å –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞—Ö –∏–ª–∏ –±–∞–Ω–∫–∞—Ö\nc) –ü—Ä–æ–≤–æ–¥–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏',reply_markup=kb.vop10)






@router.callback_query(F.data=='10a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Inz = Inz + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('11 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é –ø—Ä–æ–±–ª–µ–º—É –≤–∞–º –±—ã–ª–æ –±—ã –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —Ä–µ—à–∞—Ç—å?\na) –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –±—é–¥–∂–µ—Ç–∞–º–∏\nb) –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π\nc) –†–∞–±–æ—Ç–∞ —Å —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏ –∏–ª–∏ —Ö–∏–º–∏—á–µ—Å–∫–∏–º–∏ –≤–µ—â–µ—Å—Ç–≤–∞–º–∏',reply_markup=kb.vop11)

@router.callback_query(F.data=='10b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Buh = Buh + 1, Fin = Fin + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('11 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é –ø—Ä–æ–±–ª–µ–º—É –≤–∞–º –±—ã–ª–æ –±—ã –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —Ä–µ—à–∞—Ç—å?\na) –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –±—é–¥–∂–µ—Ç–∞–º–∏\nb) –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π\nc) –†–∞–±–æ—Ç–∞ —Å —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏ –∏–ª–∏ —Ö–∏–º–∏—á–µ—Å–∫–∏–º–∏ –≤–µ—â–µ—Å—Ç–≤–∞–º–∏',reply_markup=kb.vop11)

@router.callback_query(F.data=='10c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Psihoter  = Psihoter + 1, Psiholog = Psiholog + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('11 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é –ø—Ä–æ–±–ª–µ–º—É –≤–∞–º –±—ã–ª–æ –±—ã –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —Ä–µ—à–∞—Ç—å?\na) –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –±—é–¥–∂–µ—Ç–∞–º–∏\nb) –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π\nc) –†–∞–±–æ—Ç–∞ —Å —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏ –∏–ª–∏ —Ö–∏–º–∏—á–µ—Å–∫–∏–º–∏ –≤–µ—â–µ—Å—Ç–≤–∞–º–∏',reply_markup=kb.vop11)





@router.callback_query(F.data=='11a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Econ = Econ + 1, Fin = Fin + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('12 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –∫–∞–∂–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º?\na) –û–∫–∞–∑—ã–≤–∞—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å\nb) –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏—è –∏–ª–∏ —Ö–∏–º–∏—á–µ—Å–∫–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞\nc) –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',reply_markup=kb.vop12)

@router.callback_query(F.data=='11b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Mark = Mark + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('12 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –∫–∞–∂–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º?\na) –û–∫–∞–∑—ã–≤–∞—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å\nb) –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏—è –∏–ª–∏ —Ö–∏–º–∏—á–µ—Å–∫–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞\nc) –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',reply_markup=kb.vop12)

@router.callback_query(F.data=='11c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Him = Him + 1, Bot = Bot + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('12 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –∫–∞–∂–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º?\na) –û–∫–∞–∑—ã–≤–∞—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å\nb) –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏—è –∏–ª–∏ —Ö–∏–º–∏—á–µ—Å–∫–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞\nc) –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',reply_markup=kb.vop12)
 




@router.callback_query(F.data=='12a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Psihoter  = Psihoter + 1, Psiholog = Psiholog + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('13 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –≤–∞—Å –ø—Ä–∏–≤–ª–µ–∫–∞—é—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?\na) –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ —Ç–µ—Ä–∞–ø–∏—è\nb) –†–∞–±–æ—Ç–∞ —Å —ç–∫–æ–Ω–æ–º–∏–∫–æ–π –∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏\nc) –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –ø—Ä–∞–≤–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–∞–º',reply_markup=kb.vop13)

@router.callback_query(F.data=='12b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Him = Him + 1, Bot = Bot + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('13 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –≤–∞—Å –ø—Ä–∏–≤–ª–µ–∫–∞—é—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?\na) –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ —Ç–µ—Ä–∞–ø–∏—è\nb) –†–∞–±–æ—Ç–∞ —Å —ç–∫–æ–Ω–æ–º–∏–∫–æ–π –∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏\nc) –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –ø—Ä–∞–≤–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–∞–º',reply_markup=kb.vop13)

@router.callback_query(F.data=='12c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET It = It + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('13 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –≤–∞—Å –ø—Ä–∏–≤–ª–µ–∫–∞—é—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?\na) –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ —Ç–µ—Ä–∞–ø–∏—è\nb) –†–∞–±–æ—Ç–∞ —Å —ç–∫–æ–Ω–æ–º–∏–∫–æ–π –∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏\nc) –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –ø—Ä–∞–≤–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–∞–º',reply_markup=kb.vop13)



@router.callback_query(F.data=='13a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Psihoter  = Psihoter + 1, Psiholog = Psiholog + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('14 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –¥–µ–ª–∞—Ç—å –≤ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è?\na) –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\nb) –†–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –≤ —Å–ª–æ–∂–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö\nc) –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø—Ä–∏—Ä–æ–¥–æ–æ—Ö—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö',reply_markup=kb.vop14)

@router.callback_query(F.data=='13b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Fin = Fin + 1, Econ = Econ + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('14 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –¥–µ–ª–∞—Ç—å –≤ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è?\na) –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\nb) –†–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –≤ —Å–ª–æ–∂–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö\nc) –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø—Ä–∏—Ä–æ–¥–æ–æ—Ö—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö',reply_markup=kb.vop14)

@router.callback_query(F.data=='13c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Adv = Adv + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('14 –≤–æ–ø—Ä–æ—Å \n\n–ß—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –¥–µ–ª–∞—Ç—å –≤ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è?\na) –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\nb) –†–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –≤ —Å–ª–æ–∂–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö\nc) –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø—Ä–∏—Ä–æ–¥–æ–æ—Ö—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö',reply_markup=kb.vop14)





@router.callback_query(F.data=='14a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Inz = Inz + 1, It = It + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('15 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é —Ä–∞–±–æ—Ç—É –≤—ã –±—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ –≤ –∫—Ä–∏–∑–∏—Å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?\na) –ü–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è\nb) –†–∞–±–æ—Ç–∞—Ç—å —Å –ø—Ä–∏—Ä–æ–¥–æ–π –∏ —ç–∫–æ–ª–æ–≥–∏–µ–π\nc) –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –ø—Ä–∞–≤–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö',reply_markup=kb.vop15)

@router.callback_query(F.data=='14b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Buh = Buh + 1, Fin = Fin + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('15 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é —Ä–∞–±–æ—Ç—É –≤—ã –±—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ –≤ –∫—Ä–∏–∑–∏—Å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?\na) –ü–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è\nb) –†–∞–±–æ—Ç–∞—Ç—å —Å –ø—Ä–∏—Ä–æ–¥–æ–π –∏ —ç–∫–æ–ª–æ–≥–∏–µ–π\nc) –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –ø—Ä–∞–≤–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö',reply_markup=kb.vop15)

@router.callback_query(F.data=='14c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Ecol = Ecol + 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    await callback.answer('')
    await callback.message.edit_text('15 –≤–æ–ø—Ä–æ—Å \n\n–ö–∞–∫—É—é —Ä–∞–±–æ—Ç—É –≤—ã –±—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ –≤ –∫—Ä–∏–∑–∏—Å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?\na) –ü–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è\nb) –†–∞–±–æ—Ç–∞—Ç—å —Å –ø—Ä–∏—Ä–æ–¥–æ–π –∏ —ç–∫–æ–ª–æ–≥–∏–µ–π\nc) –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –ø—Ä–∞–≤–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö',reply_markup=kb.vop15)



@router.callback_query(F.data=='15a')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Psihoter  = Psihoter + 1, Psiholog = Psiholog + 1 WHERE user_id = ?', (user_id,))
    
    conn.commit()
    re1, re2 = test2(user_id)
    Konectest = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–í—ã–±—Ä–∞—Ç—å {re1}', callback_data='smain')],
        [InlineKeyboardButton(text=f'–í—ã–±—Ä–∞—Ç—å {re2}', callback_data='s2main')],
        [InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–æ', callback_data='main')]
    ])
    await callback.answer('')
    await callback.message.edit_text(f'–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ç–µ—Å—Ç, –≤–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç \n\n–ü—Ä–µ–¥–ø–æ–ª–æ–≥–∞–µ–º - {re1} –∏ {re2}',reply_markup=Konectest)

@router.callback_query(F.data=='15b')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Ecol = Ecol + 1 WHERE user_id = ?', (user_id,))
    
    conn.commit()
    re1, re2 = test2(user_id)
    Konectest = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–í—ã–±—Ä–∞—Ç—å {re1}', callback_data='smain')],
        [InlineKeyboardButton(text=f'–í—ã–±—Ä–∞—Ç—å {re2}', callback_data='s2main')],
        [InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–æ', callback_data='main')]
    ])
    await callback.answer('')
    await callback.message.edit_text(f'–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ç–µ—Å—Ç, –≤–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç \n\n–ü—Ä–µ–¥–ø–æ–ª–æ–≥–∞–µ–º - {re1} –∏ {re2}',reply_markup=Konectest)

@router.callback_query(F.data=='15c')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute('UPDATE professions_test SET Adv = Adv + 1 WHERE user_id = ?', (user_id,))
    
    conn.commit()
    re1, re2 = test2(user_id)
    Konectest = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–í—ã–±—Ä–∞—Ç—å {re1}', callback_data='smain')],
        [InlineKeyboardButton(text=f'–í—ã–±—Ä–∞—Ç—å {re2}', callback_data='s2main')],
        [InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–æ', callback_data='main')]
    ])
    await callback.answer('')
    await callback.message.edit_text(f'–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ç–µ—Å—Ç, –≤–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç \n\n–ü—Ä–µ–¥–ø–æ–ª–æ–≥–∞–µ–º - {re1} –∏ {re2}',reply_markup=Konectest)

    
@router.callback_query(F.data=='smain')
async def tsh(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    mxpr, mxpr2 = test(user_id)
    cursor.execute("INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES (? , ?)", (user_id, mxpr))
    conn.commit
    conn.close
    res1 = napslovo(user_id)
    await callback.message.edit_text(f"–í–∞—à–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:\n{res1}\n\n–ù–∞–π–¥–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫—É—Ä—Å—ã –≤ –ø–æ—Ä—Ç–∞–ª–µ –∏ —Ä–µ—à–∏ –∫—É–¥–∞ –ø–æ—Å—Ç—É–ø–∞—Ç—å!", reply_markup=kb.mainmenuwith)
@router.callback_query(F.data=='s2main')
async def tsh(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    mxpr, mxpr2 = test(user_id)
    cursor.execute("INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES (? , ?)", (user_id, mxpr2))
    conn.commit
    conn.close
    res1 = napslovo(user_id)
    await callback.message.edit_text(f"–í–∞—à–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:\n{res1}\n\n–ù–∞–π–¥–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫—É—Ä—Å—ã –≤ –ø–æ—Ä—Ç–∞–ª–µ –∏ —Ä–µ—à–∏ –∫—É–¥–∞ –ø–æ—Å—Ç—É–ø–∞—Ç—å!", reply_markup=kb.mainmenuwith)






# endregion




# region OBZOR 1



######
@router.callback_query(F.data=='Fm')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'nety'))
    conn.commit()
    await callback.answer('–§–∏–∑–∏–∫–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ')
    await callback.message.edit_text('–ü–æ–¥–±–æ—Ä–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å —Ñ–∏–∑–∏–∫–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —É–∫–ª–æ–Ω–æ–º',reply_markup=kb.FizMat)

@router.callback_query(F.data=='Hm')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'nety'))
    conn.commit()
    await callback.answer('–•–∏–º-–±–∏–æ')
    await callback.message.edit_text('–ü–æ–¥–±–æ—Ä–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å —Ö–∏–º-–±–∏–æ —É–∫–ª–æ–Ω–æ–º',reply_markup=kb.HimBio)

@router.callback_query(F.data=='Gm')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'nety'))
    conn.commit()
    await callback.answer('–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ')
    await callback.message.edit_text('–ü–æ–¥–±–æ—Ä–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–º —É–∫–ª–æ–Ω–æ–º',reply_markup=kb.Gym)

    
####
@router.callback_query(F.data=='Sinz')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'F1'))
    conn.commit()
    await callback.answer('–ò–Ω–∂–µ–Ω–µ—Ä')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ò–Ω–∂–µ–Ω–µ—Ä - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)

@router.callback_query(F.data=='Sit')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'F2'))
    conn.commit()
    await callback.answer('IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)


@router.callback_query(F.data=='Sec')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'F3'))
    conn.commit()
    await callback.answer('–≠–∫–æ–Ω–æ–º–∏—Å—Ç')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≠–∫–æ–Ω–æ–º–∏—Å—Ç - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)


@router.callback_query(F.data=='Sfin')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'F4'))
    conn.commit()
    await callback.answer('–§–∏–Ω–∞–Ω—Å–∏—Å—Ç')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –§–∏–Ω–∞–Ω—Å–∏—Å—Ç - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)


@router.callback_query(F.data=='Sbuh')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'F5'))
    conn.commit()
    await callback.answer('–ë—É—Ö–≥–∞–ª—Ç–µ—Ä')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ë—É—Ö–≥–∞–ª—Ç–µ—Ä - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)




####
@router.callback_query(F.data=='Shim')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'H1'))
    conn.commit()
    await callback.answer('–•–∏–º–∏–∫')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –•–∏–º–∏–∫ - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)

@router.callback_query(F.data=='Secol')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'H2'))
    conn.commit()
    await callback.answer('–≠–∫–æ–ª–æ–≥')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≠–∫–æ–ª–æ–≥ - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)


@router.callback_query(F.data=='Spsihoter')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'H3'))
    conn.commit()
    await callback.answer('–ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)


@router.callback_query(F.data=='Sall')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'H4'))
    conn.commit()
    await callback.answer('–ê–ª–ª–µ—Ä–≥–æ–ª–æ–≥')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ê–ª–ª–µ—Ä–≥–æ–ª–æ–≥ - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)


@router.callback_query(F.data=='Sbot')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'H5'))
    conn.commit()
    await callback.answer('–ë–æ—Ç–∞–Ω–∏–∫')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ë–æ—Ç–∞–Ω–∏–∫ - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)





####
@router.callback_query(F.data=='Smark')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'G1'))
    conn.commit()
    await callback.answer('–ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥ - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)

@router.callback_query(F.data=='Sadv')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'G2'))
    conn.commit()
    await callback.answer('–ê–¥–≤–æ–∫–∞—Ç')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ê–¥–≤–æ–∫–∞—Ç - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)


@router.callback_query(F.data=='Szhur')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'G3'))
    conn.commit()
    await callback.answer('–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ñ—É—Ä–Ω–∞–ª–∏—Å—Ç - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)


@router.callback_query(F.data=='Sprep')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'G4'))
    conn.commit()
    await callback.answer('–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)


@router.callback_query(F.data=='Spsihol')
async def tsh(callback: CallbackQuery):
    user_id = callback.from_user.id
    cursor.execute ('INSERT OR REPLACE INTO users (user_id, napravlenie) VALUES(?, ?)', (user_id,'G5'))
    conn.commit()
    await callback.answer('–ü—Å–∏—Ö–æ–ª–æ–≥')
    await callback.message.edit_text('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ü—Å–∏—Ö–æ–ª–æ–≥ - –≤–µ—Ä–Ω–æ?',reply_markup=kb.Sinz)



# endregion








